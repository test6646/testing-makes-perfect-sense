import React from 'react';
import { Document, Page, Text, View, pdf } from '@react-pdf/renderer';
import { SharedPDFHeader, SharedPDFFooter, SimpleTable, sharedStyles } from '@/components/pdf/SharedPDFLayout';
import { formatDate } from '@/lib/date-utils';
import { supabase } from '@/integrations/supabase/client';


interface InvoiceData {
  invoiceNumber: string;
  invoiceDate: string;
  firm: {
    name: string;
    email?: string;
    phone?: string;
  };
  payment: {
    razorpay_payment_id: string;
    razorpay_order_id: string;
    amount: number;
    currency: string;
    plan_type: string;
    period_months: number;
    paid_at: string;
  };
  razorpayDetails: {
    payment_id: string;
    order_id: string;
    signature?: string;
    method?: string;
  };
  firmData?: {
    name: string;
    description?: string;
    logo_url?: string;
    header_left_content?: string;
    footer_content?: string;
  };
}

export const UnifiedSubscriptionInvoicePDF: React.FC<{ data: InvoiceData }> = ({ data }) => {
  const formatCurrency = (amount: number, currency: string = 'INR') => {
    return new Intl.NumberFormat('en-IN', {
      style: 'currency',
      currency,
      maximumFractionDigits: 0,
    }).format(amount);
  };

  const getPlanDisplayName = (planType: string) => {
    switch (planType) {
      case 'monthly': return 'Starter Plan';
      case 'quarterly': return 'Growth Plan';
      case 'yearly': return 'Pro Plan';
      default: return 'Subscription Plan';
    }
  };

  // Prepare table data
  const subscriptionHeaders = ['Description', 'Period', 'Amount'];
  const subscriptionRows = [
    [
      `${getPlanDisplayName(data.payment.plan_type)} - Studio Management Subscription`,
      `${data.payment.period_months} ${data.payment.period_months === 1 ? 'Month' : 'Months'}`,
      formatCurrency(data.payment.amount, data.payment.currency)
    ]
  ];

  const paymentHeaders = ['Payment Details', 'Value'];
  const paymentRows = [
    ['Payment Method', 'Online Payment (Razorpay)'],
    ['Transaction ID', data.razorpayDetails.payment_id],
    ['Order ID', data.razorpayDetails.order_id],
    ['Payment Status', 'Successfully Processed']
  ];

  // Override firm data to show Stoodiora branding
  const stoodioraFirmData = {
    name: 'STOODIORA',
    description: 'Studio Management System',
    logo_url: '/images/stoodiora-logo.png', // Use PNG logo for PDF compatibility
    header_left_content: 'team-stoodiora@gmail.com\n+91 91064 03233',
    footer_content: 'Generated by Stoodiora Studio Management System'
  };

  return (
    <Document>
      <Page size="A4" style={sharedStyles.page}>
        <SharedPDFHeader firmData={stoodioraFirmData} />
        
        <Text style={sharedStyles.title}>SUBSCRIPTION INVOICE</Text>
        
        {/* Document ID */}
        <Text style={sharedStyles.documentId}>Invoice ID: {data.invoiceNumber}</Text>
        
        {/* Invoice and Bill Details in 2-Column Layout */}
        <View style={sharedStyles.detailsContainer}>
          <View style={sharedStyles.column}>
            <Text style={sharedStyles.sectionTitle}>Invoice Details</Text>
            <View style={sharedStyles.detailRow}>
              <Text style={sharedStyles.detailLabel}>Invoice Date:</Text>
              <Text style={sharedStyles.detailValue}>{data.invoiceDate}</Text>
            </View>
            <View style={sharedStyles.detailRow}>
              <Text style={sharedStyles.detailLabel}>Payment Date:</Text>
              <Text style={sharedStyles.detailValue}>{formatDate(new Date(data.payment.paid_at))}</Text>
            </View>
            <View style={sharedStyles.detailRow}>
              <Text style={sharedStyles.detailLabel}>Period:</Text>
              <Text style={sharedStyles.detailValue}>
                {data.payment.period_months} {data.payment.period_months === 1 ? 'Month' : 'Months'}
              </Text>
            </View>
          </View>
          
          <View style={sharedStyles.column}>
            <Text style={sharedStyles.sectionTitle}>Billed To</Text>
            <View style={sharedStyles.detailRow}>
              <Text style={sharedStyles.detailLabel}>Firm:</Text>
              <Text style={sharedStyles.detailValue}>{data.firm.name}</Text>
            </View>
            {data.firm.email && (
              <View style={sharedStyles.detailRow}>
                <Text style={sharedStyles.detailLabel}>Email:</Text>
                <Text style={sharedStyles.detailValue}>{data.firm.email}</Text>
              </View>
            )}
            {data.firm.phone && (
              <View style={sharedStyles.detailRow}>
                <Text style={sharedStyles.detailLabel}>Phone:</Text>
                <Text style={sharedStyles.detailValue}>{data.firm.phone}</Text>
              </View>
            )}
          </View>
        </View>

        {/* Subscription Details Table */}
        <SimpleTable 
          headers={subscriptionHeaders}
          rows={subscriptionRows}
        />

        {/* Payment Summary */}
        <View style={sharedStyles.detailsContainer}>
          <View style={sharedStyles.column}>
            <Text style={sharedStyles.sectionTitle}>Payment Summary</Text>
            <View style={sharedStyles.detailRow}>
              <Text style={sharedStyles.detailLabel}>Subtotal:</Text>
              <Text style={sharedStyles.detailValue}>{formatCurrency(data.payment.amount, data.payment.currency)}</Text>
            </View>
            <View style={sharedStyles.detailRow}>
              <Text style={sharedStyles.detailLabel}>Tax (GST):</Text>
              <Text style={sharedStyles.detailValue}>Included</Text>
            </View>
            <View style={sharedStyles.detailRow}>
              <Text style={sharedStyles.detailLabel}>Discount:</Text>
              <Text style={sharedStyles.detailValue}>â‚¹0.00</Text>
            </View>
            <View style={sharedStyles.detailRow}>
              <Text style={[sharedStyles.detailLabel, { fontWeight: 'bold', color: '#c4b28d' }]}>TOTAL PAID:</Text>
              <Text style={[sharedStyles.detailValue, { fontWeight: 'bold', color: '#c4b28d' }]}>
                {formatCurrency(data.payment.amount, data.payment.currency)}
              </Text>
            </View>
          </View>
        </View>

        {/* Payment Details Table */}
        <SimpleTable 
          headers={paymentHeaders}
          rows={paymentRows}
        />

        <SharedPDFFooter firmData={stoodioraFirmData} />
      </Page>
    </Document>
  );
};

export const generateUnifiedSubscriptionInvoicePDF = async (data: InvoiceData) => {
  // Fetch firm data if not provided
  if (!data.firmData) {
    try {
      const { data: firmData } = await supabase
        .from('firms')
        .select('name, description, logo_url, header_left_content, footer_content')
        .single();
      
      if (firmData) {
        data.firmData = firmData;
      }
    } catch (error) {
      console.error('Error fetching firm data:', error);
    }
  }

  const doc = <UnifiedSubscriptionInvoicePDF data={data} />;
  const asPdf = pdf(doc);
  const blob = await asPdf.toBlob();
  
  const url = URL.createObjectURL(blob);
  const link = document.createElement('a');
  link.href = url;
  link.download = `stoodiora-invoice-${data.razorpayDetails.payment_id}.pdf`;
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
  URL.revokeObjectURL(url);
};
